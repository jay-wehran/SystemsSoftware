In this project, I've worked on developing functions for serializing and deserializing data types and data structures in C++. The goal is to convert these variables and structures into a binary format suitable for transmission over a network channel. The Pack109 serialization format is utilized for this purpose, which involves encoding various data types like booleans, integers, floats, strings, arrays, and maps into byte streams with specific tags to ensure correct interpretation. In addition to implementing the serialization and deserialization functions, unit tests have been created to validate their functionality, covering a wide range of data types and scenarios. The provided overview and table explain the serialization format and the corresponding tags for different data types. The final result is a set of functions that allow for seamless data transmission and retrieval in a networked environment.
